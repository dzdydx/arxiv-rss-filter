name: Run Arxiv Filter

on:
  schedule:
    # 北京时间 12:01 对应 UTC 时间 04:01
    - cron: '1 4 * * 1-5'  # 周一到周五 UTC 04:01 (北京时间 12:01)
  workflow_dispatch:  # 添加手动触发选项

jobs:
  check-updates:
    runs-on: ubuntu-latest
    outputs:
      has_updates: ${{ steps.check.outputs.has_updates }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create .env file
      run: |
        echo "API_KEY=${{ secrets.API_KEY }}" > .env
        echo "MODEL_NAME=${{ secrets.MODEL_NAME }}" >> .env
        echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env
    
    - name: Download previous batch inference cache
      uses: actions/download-artifact@v4
      with:
        name: batch-inference-cache
        path: arxiv_updates/
      continue-on-error: true  # 首次运行时可能没有缓存
    
    - name: Check for updates
      id: check
      run: python check_updates.py
      
    - name: Upload RSS cache
      if: steps.check.outputs.has_updates == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: rss-cache
        path: rss_cache.json
        retention-days: 1
    
    - name: Upload batch inference cache
      if: steps.check.outputs.has_updates == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: batch-inference-cache
        path: arxiv_updates/batch_results_*.json
        retention-days: 7  # 保留7天，覆盖工作日周期
      continue-on-error: true  # 如果没有缓存文件也不报错

  run-filter:
    needs: check-updates
    if: needs.check-updates.outputs.has_updates == 'true'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create .env file
      run: |
        echo "API_KEY=${{ secrets.API_KEY }}" > .env
        echo "MODEL_NAME=${{ secrets.MODEL_NAME }}" >> .env
        echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env
    
    - name: Download RSS cache from previous job
      uses: actions/download-artifact@v4
      with:
        name: rss-cache
        path: .
    
    - name: Download batch inference cache from previous job
      uses: actions/download-artifact@v4
      with:
        name: batch-inference-cache
        path: arxiv_updates/
      continue-on-error: true  # 如果没有缓存也不报错
    
    - name: Run filter
      run: python run_filter.py
    
    - name: Generate RSS feed
      run: python generate_rss.py
    
    - name: Upload updated batch inference cache
      uses: actions/upload-artifact@v4
      with:
        name: batch-inference-cache-updated
        path: arxiv_updates/batch_results_*.json
        retention-days: 7
      continue-on-error: true
    
    - name: Deploy RSS feed
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
        publish_branch: gh-pages
        keep_files: true
        commit_message: ${{ github.event.head_commit.message }} 